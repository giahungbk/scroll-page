{"version":3,"sources":["helpers/utils.js","components/ScrollPage.js","App.js","serviceWorker.js","index.js"],"names":["setHeightScrollHorizontal","container","elementHeight","h","offsetWidth","window","innerWidth","innerHeight","style","height","setHeightScrollVertical","clientHeight","animateFrame","i","t","setInterval","document","createEvent","resizeEvent","initUIEvent","dispatchEvent","Event","triggerResize","clearInterval","lastTime","id","vendors","x","length","requestAnimationFrame","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","setTimeout","clearTimeout","Scrollpage","props","piContainer","createRef","fixcontainer","funcResize","funcScroll","scrollTop","tweened","req","speed","isHorizontalScroll","this","current","position","top","left","transform","scrollDefault","scrollY","update","abs","floor","callbackScroll","scroll","display","removeEventListener","scrollHandle","bind","addEventListener","funcMouseMove","ref","children","Component","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.af469e3e.chunk.js","sourcesContent":["const setHeightScrollHorizontal = (container, elementHeight) => {\r\n    const containerWidth = container.offsetWidth;\r\n    const h = containerWidth - window.innerWidth + window.innerHeight;\r\n    elementHeight.style.height = `${h}px`;\r\n}\r\n\r\nconst setHeightScrollVertical = (container, elementHeight) => {\r\n    const h = container.clientHeight;\r\n    elementHeight.style.height = `${h}px`;\r\n}\r\n\r\nconst triggerResize = () => {\r\n    if (document.createEvent){\r\n        let resizeEvent = window.document.createEvent('UIEvents');\r\n        resizeEvent.initUIEvent('resize', true, false, window, 0);\r\n        window.dispatchEvent(resizeEvent);\r\n    } else {\r\n        window.dispatchEvent(new Event('resize'));\r\n    }\r\n}\r\n\r\nconst animateFrame = () => {\r\n    let i = 0;\r\n    const t = setInterval(() => {\r\n        if (i < 6) {\r\n            triggerResize();\r\n            i = i + 1;\r\n        } else {\r\n            clearInterval(t);\r\n        }\r\n    }, 1000);\r\n\r\n    let lastTime = 0, id = null;\r\n    let vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\r\n    }\r\n\r\n    if (!window.requestAnimationFrame) {\r\n        window.requestAnimationFrame = function(callback) {\r\n            let currTime = new Date().getTime();\r\n            let timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            id = window.setTimeout(function() { callback(currTime + timeToCall); },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n\r\n    if (!window.cancelAnimationFrame) {\r\n        window.cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n};\r\n\r\nconst elementInViewport = (el) => {\r\n    const rect = el.getBoundingClientRect();\r\n\r\n    return (\r\n        rect.top >= 0\r\n        && rect.left >= 0\r\n        && rect.top <= (\r\n        window.innerHeight || document.documentElement.clientHeight\r\n        )\r\n    );\r\n}\r\n\r\nexport {\r\n    setHeightScrollHorizontal,\r\n    setHeightScrollVertical,\r\n    animateFrame,\r\n    elementInViewport\r\n}\r\n","import React, { Component, createRef } from 'react'\r\n\r\nimport { setHeightScrollHorizontal, setHeightScrollVertical, animateFrame } from '../helpers/utils'\r\n\r\nexport default class Scrollpage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.piContainer = createRef();\r\n        this.fixcontainer = createRef();\r\n\r\n        this.funcResize = null;\r\n        this.funcScroll = null;\r\n\r\n        this.scrollTop = 0;\r\n        this.tweened = 0;\r\n        this.req = null;\r\n        this.speed = this.props.speed ?? 0.05;\r\n\r\n        this.isHorizontalScroll = this.props.isHorizontalScroll ?? true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        animateFrame();\r\n        let speed = this.speed;\r\n\r\n        //set the styles\r\n        this.fixcontainer.current.style.position = 'fixed';\r\n        this.fixcontainer.current.style.top = '0';\r\n        this.fixcontainer.current.style.left = '0';\r\n        this.fixcontainer.current.style.transform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n\r\n        const scrollDefault = () => {\r\n            this.scrollTop = window.scrollY;\r\n        };\r\n        \r\n        const update = () => {\r\n            this.req = window.requestAnimationFrame(update);\r\n            if (Math.abs(this.scrollTop - this.tweened) > 0) {\r\n                const left =  Math.floor(this.tweened += speed * (this.scrollTop - this.tweened));\r\n                if (window.innerWidth > 1025 && this.isHorizontalScroll) {\r\n                    this.fixcontainer.current.style.transform = `matrix3d(1,0,0,0, 0,1,0,0, 0,0,1,0, ${(left * -1)},0,0,1)`;\r\n                    setHeightScrollHorizontal(this.fixcontainer.current, this.piContainer.current);\r\n                } else {\r\n                    this.fixcontainer.current.style.transform = `matrix3d(1,0,0,0, 0,1,0,0, 0,0,1,0, 0,${(left * -1)},0,1)`;\r\n                    setHeightScrollVertical(this.fixcontainer.current, this.piContainer.current);\r\n                }\r\n            } \r\n        }\r\n        update();\r\n \r\n        const callbackScroll = (scroll) => this.scrollTop = scroll;\r\n\r\n        this.funcResize  = () => {\r\n            this.req = null;\r\n  \r\n            if (window.innerWidth > 1025 && this.isHorizontalScroll) {\r\n                this.fixcontainer.current.style.display = 'flex';\r\n                this.fixcontainer.current.style.height = '100vh';\r\n                setHeightScrollHorizontal(this.fixcontainer.current, this.piContainer.current);\r\n                if (this.funcScroll) {\r\n                    window.removeEventListener('scroll', this.funcScroll);\r\n                    this.funcScroll = null;\r\n                }\r\n                if (this.props.scrollHandle) {\r\n                    this.funcScroll = this.props.scrollHandle.bind(this, callbackScroll);\r\n                } else {\r\n                    this.funcScroll = scrollDefault;\r\n                }\r\n\r\n                window.addEventListener('mousemove', this.funcMouseMove);\r\n            } else {   \r\n                this.fixcontainer.current.style.display = 'block';\r\n                this.fixcontainer.current.style.height = 'initial';\r\n                setHeightScrollVertical(this.fixcontainer.current, this.piContainer.current);\r\n                if (this.funcScroll) {\r\n                    window.removeEventListener('scroll', this.funcScroll);\r\n                    this.funcScroll = null;\r\n                } \r\n                this.funcScroll = scrollDefault;\r\n            }\r\n\r\n            if (this.isHorizontalScroll) {\r\n                speed = window.innerWidth > 1025 ? this.speed : 1;\r\n            }\r\n            if (!this.isHorizontalScroll) {\r\n                speed = window.innerWidth > 1025 ? this.speed : 1;\r\n            }\r\n \r\n            window.addEventListener('scroll',  this.funcScroll, false);\r\n        };\r\n        window.addEventListener('resize', this.funcResize, false);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.funcScroll);\r\n        window.removeEventListener('resize', this.funcResize);\r\n        window.cancelAnimationFrame(this.req); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div ref={this.fixcontainer}>\r\n                    {this.props.children}\r\n                </div>\r\n                <div ref={this.piContainer}></div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport ScrollPage from \"./components/ScrollPage\";\n\nfunction App() {\n  return (\n    <ScrollPage isHorizontalScroll={true} speed={0.06}>\n      <div className=\"box\">DIV 1</div>\n      <div className=\"box\">DIV 2</div>\n      <div className=\"box\">DIV 3</div>\n      <div className=\"box\">DIV 4</div>\n    </ScrollPage>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}